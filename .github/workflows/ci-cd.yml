name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Bump Version
      id: bump
      uses: nnichols/maven-version-bump-action@v3
      with:
        github-token: ${{ secrets.github_token }}


    - name: Extract new version from tag
      id: version
      run: |
        VERSION=$(git describe --tags)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'


    - name: Update pom.xml to match tag version
      run: |
        mvn versions:set -DnewVersion=${{ steps.version.outputs.version }}
        mvn versions:commit

    - name: Run Tests
      run: mvn test
      
    - name: Build JAR
      run: mvn clean package

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin


    - name: Build Docker Image with Version Tag
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/simple-java-app:${{ steps.version.outputs.version }} .

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/simple-java-app:${{ steps.version.outputs.version }}

    - name: Deploy to Server
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
        chmod 600 key.pem

        ssh -i key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@3.65.36.162 << EOF
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker pull $DOCKER_USERNAME/simple-java-app:${{ steps.version.outputs.version }}
          docker stop app || true && docker rm app || true
          docker run -d --name app -p 80:8080 $DOCKER_USERNAME/simple-java-app:${{ steps.version.outputs.version }}
        EOF
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

